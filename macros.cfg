# pre print macros

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(59)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(209)|float %}

    M117 Setting Bed Temp to {BED_TEMP}
    M140 S{BED_TEMP} ; set bed temp
    M104 S{EXTRUDER_TEMP} ; heat extruder
    M117 Heating Extruder to {EXTRUDER_TEMP}
    M190 S{BED_TEMP} ; heat bed, wait for temp
    M117 Heating Bed to {BED_TEMP}
    
    M117 Homing XYZ
    G28 ; home axis
  

    M190 S{BED_TEMP} ; heat bed, wait for temp
    M109 S{EXTRUDER_TEMP} ; heat extruder, wait for temp

    SET_GCODE_OFFSET Z=0 ; reset z offset

    LOAD_MESH_TEMP
    
    # MESH_BED ; mesh bed

    PURGE_LINE ; run purge line
    M117 Started printing ...

[gcode_macro LOAD_MESH_TEMP]
gcode:
    {% set BED_TEMP = printer.heater_bed.target|float %}
    {% set BED_TEMP_STR = BED_TEMP|string %}

    {% if BED_TEMP|int < 30 %}
        {action_respond_info("Bed temp is too low")}
    {% else %}
        {% if printer.configfile.config["bed_mesh " + BED_TEMP_STR] is defined %}
            BED_MESH_PROFILE LOAD={BED_TEMP}
            {action_respond_info("Succesfully loaded bed_mesh "+ BED_TEMP_STR)}
        {% else %}
            {% if printer.configfile.config["bed_mesh " + BED_TEMP_STR] is defined and FORCE|int == 1 %}
                BED_MESH_PROFILE REMOVE={BED_TEMP}
            {% endif %}
            {action_respond_info("Bed Mesh not defined, your bed temperature will go up!")}
            {action_respond_info("We will probe the bed and save the mesh ")}
            ADD_BED_MESH BED_TEMP={BED_TEMP}
        {% endif %}
    {% endif %}

[gcode_macro ADD_BED_MESH]
gcode:
    {% set TARGET_TEMP = params.BED_TEMP|default(59)|float %}
    M190 S{TARGET_TEMP} # Wait for the bed to hit TARGET_TEMP
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE={TARGET_TEMP}
    SAVE_AT_END

[gcode_macro RANDOM_TEST]
gcode:
    {% set PURGE_X = range(1, 3, random) %}
    M117 PURGE_X

[gcode_macro PURGE_LINE]
gcode:
    M117 Purging
    {action_respond_info("Purging...")}
    G90 ; absolute positioning
    G92 E0 ; zero/reset extruder
    G1 X2.2 Y20 Z0.3 F18000 ; move to start position
    G92 E0 ; zero/reset extruder

    {% if printer[printer.toolhead.extruder].target > 220 %}
        G1 E4.8 F3600 ; prime filament PETG
        {action_respond_info("set PETG z offset")}

        SET_GCODE_OFFSET Z_ADJUST=+0.08 MOVE=1 ; set PETG z offset
    {% else %}
        G1 E0.8 F3600 ; prime filament PLA
    {% endif %}
        
    {action_respond_info("extrude the first line")}

    G1 X2.2 Y200 Z0.25 F1500 E10 ; extrude the first line
    G1 X2.5 Y200 Z0.3 F18000 ; move to side a little
    G1 X2.5 Y20 Z0.25 F1500.0 E20 ; extrude the second line

    G92 E0 ; zero/reset extruder
    G1 E-0.1 F3000 ; move nozzle up and retract tiny bit

    G91 ; relative positioning
    G0 Z1.00 X10.0 Y10.0 F20000 ; move nozzle to remove stringing
    G90 ; absolute positioning
    
    G92 E0 ; zero/reset extruder



# Macros for during printing

# Cancel print macro
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  M400 ; wait for buffer to clear
  G92 E0 ; zero the extruder
  {% if printer[printer.toolhead.extruder].target > 220 %}
      G1 E-5.0 F3600 ; retract filament PETG
  {% else %}
      G1 E-1.0 F3600 ; retract filament PLA
  {% endif %}
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  G91 ; relative positioning
  G0 Z1.00 X20.0 Y20.0 F20000 ; move nozzle to remove stringing
  TURN_OFF_HEATERS
  M107 ; turn off fan
  G1 Z4 F3000 ; move nozzle up 2mm
  G90 ; absolute positioning
  G0 X190 Y190 F3600 ; park nozzle at rear


# Pause print macro
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
  
# Resume print macro
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


# Filament change
[gcode_macro M0]
gcode:
    PAUSE


[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    SET_IDLE_TIMEOUT TIMEOUT=3600
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


# post print macros

# Print End
# Called when print is finished
[gcode_macro PRINT_END]
gcode:
    M400 ; wait for buffer to clear
    G92 E0 ; zero the extruder

    {% if printer[printer.toolhead.extruder].target > 220 %}
        G1 E-5.0 F3600 ; retract filament PETG
    {% else %}
        G1 E-1.0 F3600 ; retract filament PLA
    {% endif %}

    G91 ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000 ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107 ; turn off fan
    G1 Z4 F3000 ; move nozzle up 2mm
    G90 ; absolute positioning
    G0 X180 Y180 F3600 ; park nozzle at rear
    M300 S700 P300 L0.7  ; beep sound
    PRESENT_PRINT
    SAVE_IF_SET

# Present Print
# Called to move the bed down to 150mm
# or down 2mm depending on current Z value
[gcode_macro PRESENT_PRINT]
gcode:
    M117 Presenting Print
    {% if printer.toolhead.position.z < 148 %}
        G90
        G1 Z150
    {% else %}
        G91
        G1 Z5
        G90
    {% endif %}

[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
    SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1

[gcode_macro SAVE_IF_SET]
gcode:
    {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
        #{printer.gcode.action_respond_info("Saving was requested - saving and restarting now")}
        SAVE_CONFIG

    {% endif %}

# maintenance macros

# [homing_override]
# axes: xyz
# set_position_z: 2
# gcode:
#     G91
#     G1 Z5
#     G90
#     G28 X Y
#     G1 X100 Y100 F18000
#     G28 Z

[gcode_macro IfTest]
gcode:
    {% if "xyx" not in printer.toolhead.homed_axes %}
        M117 Not Homed
    {% endif %}

[safe_z_home]
home_xy_position: 144,120
speed: 50
z_hop: 5
z_hop_speed: 20.0
move_to_previous: False

[gcode_macro MESH_BED]
gcode:
    BED_MESH_CLEAR
    {% if printer.toolhead.homed_axes != "xyz" %}
        M117 Homing XYZ
        G28 ; home axis
    {% endif %}
    M117 Generating Bed Mesh
    BED_MESH_CALIBRATE

[gcode_macro Present_Nozzle]
gcode:
    M117 Presenting Nozzle
    G90
    {% if printer.toolhead.position.z < 98 %}
        G1 X100 Y0 Z100 F1500
    {% endif %}
    G1 X100 Y0 F1500

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(500) %}
    G91
    G1 E50 F{speed}
    G1 E50 F{speed}
    G92


[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(500) %}
    G91
    G1 E-50 F{speed}
    G1 E-50 F{speed}
    G92

 
[gcode_macro Tune_Bed_ASA]
gcode:
    M117 PID Tuning Bed to 110 C
    PID_CALIBRATE HEATER=heater_bed TARGET=110

[gcode_macro Tune_ASA]
gcode:
    M117 PID Tuning Extruder to 270 C
    PID_CALIBRATE HEATER=extruder TARGET=270

 
[gcode_macro Tune_Bed_ABS]
gcode:
    M117 PID Tuning Bed to 100 C
    PID_CALIBRATE HEATER=heater_bed TARGET=100

[gcode_macro Tune_ABS]
gcode:
    M117 PID Tuning Extruder to 260 C
    PID_CALIBRATE HEATER=extruder TARGET=260
    
[gcode_macro Tune_Bed_PLA]
gcode:
    M117 PID Tuning Bed to 68 C
    PID_CALIBRATE HEATER=heater_bed TARGET=68

[gcode_macro Tune_PLA]
gcode:
    M117 PID Tuning Extruder to 215 C
    PID_CALIBRATE HEATER=extruder TARGET=215

[gcode_macro Tune_PETG]
gcode:
    M117 PID Tuning Extruder to 255 C
    PID_CALIBRATE HEATER=extruder TARGET=255

[gcode_macro Tune_Bed_PETG]
gcode:
    M117 PID Tuning Bed to 80 C
    PID_CALIBRATE HEATER=heater_bed TARGET=80

 
[gcode_macro Tune_Bed_WOOD]
gcode:
    M117 PID Tuning Bed to 55 C
    PID_CALIBRATE HEATER=heater_bed TARGET=55

[gcode_macro Tune_WOOD]
gcode:
    M117 PID Tuning Extruder to 215 C
    PID_CALIBRATE HEATER=extruder TARGET=215

 
[gcode_macro Tune_Bed_STAINLESS]
gcode:
    M117 PID Tuning Bed to 60 C
    PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro Tune_STAINLESS]
gcode:
    M117 PID Tuning Extruder to 230 C
    PID_CALIBRATE HEATER=extruder TARGET=230

    